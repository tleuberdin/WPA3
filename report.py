#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
report.py — report module: CLI & HTML.
"""
import os
import webbrowser
from datetime import datetime

ATTACK_CATALOG = {
    "DeauthFlood":    {"code":"DF01","description":"Flood deauth frames.","recommendation":"Enable 802.11w MFP."},
    "BeaconFlood":    {"code":"BF02","description":"Fake beacons flood.","recommendation":"Deploy beacon filtering."},
    "AuthDOS":        {"code":"AD03","description":"Auth requests flood.","recommendation":"Rate-limit auth requests."},
    "DeauthFloodMDK": {"code":"MD04","description":"MDK4 deauth flood.","recommendation":"Use WPA3-SAE with MFP."},
    "EAPOLStartFlood":{"code":"ES05","description":"EAPOL-Start flood.","recommendation":"Rate-limit EAPOL."},
    "WIDSConfusion":  {"code":"WC06","description":"Confuse WIDS.","recommendation":"Tighten WIDS rules."},
    "RTSCTSFlood":    {"code":"RF07","description":"RTS/CTS flood.","recommendation":"Enable CTS-to-self."},
}


def cli_summary(success_steps, best_combo):
    print("\n=== SHORT REPORT ===")
    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    print(f"Time: {now}")
    if success_steps:
        print(f"Successful DoS steps : {len(success_steps)}")
        for ep, step, combo in success_steps:
            names = " + ".join(atk.name for atk, *_ in combo)
            print(f" • Ep{ep} Step{step}: {names}")
    else:
        print("No successful steps were identified.")
    if best_combo:
        names = " + ".join(atk.name for atk, *_ in best_combo)
        print(f"Best combination: {names}")
    else:
        print("The best combination has not been determined.")


def generate_html(success_steps, best_combo, filename="wifi_audit_report.html"):
    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    html = [
        "<!DOCTYPE html><html lang='ru'><head><meta charset='UTF-8'><title>Wi-Fi Audit</title>",
        "<style>body{font-family:sans-serif;padding:20px}th,td{border:1px solid#ccc;padding:8px;}th{background:#eee}</style>",
        "</head><body>",
        f"<h1>Wi-Fi Audit Report</h1><p><em>Generated by: {now}</em></p>",
        "<h2>1. Successful steps</h2>"
    ]
    if success_steps:
        html += ["<table><tr><th>Ep</th><th>Step</th><th>Combination</th></tr>"]
        for ep, step, combo in success_steps:
            names = ", ".join(atk.name for atk, *_ in combo)
            html.append(f"<tr><td>{ep}</td><td>{step}</td><td>{names}</td></tr>")
        html.append("</table>")
    else:
        html.append("<p>There are no successful steps.</p>")

    html.append("<h2>2. Best scenario</h2>")
    if best_combo:
        html.append("<ul>")
        for atk, *_ in best_combo:
            info = ATTACK_CATALOG.get(atk.name, {})
            html.append(f"<li><b>{atk.name} ({info.get('code')})</b>: {info.get('description')}</li>")
        html.append("</ul>")
    else:
        html.append("<p>Not defined.</p>")

    html.append("<h2>3. Recommendations</h2><ul>")
    used = {atk.name for ep, st, combo in success_steps for atk, *_ in combo}
    if best_combo:
        used |= {atk.name for atk, *_ in best_combo}
    for name in sorted(used):
        rec = ATTACK_CATALOG.get(name, {}).get("recommendation","—")
        html.append(f"<li><b>{name}</b>: {rec}</li>")
    html.append("</ul>")

    html.append("</body></html>")

    with open(filename, "w", encoding="utf-8") as f:
        f.write("\n".join(html))
    print(f"[INFO] HTML- report: {filename}")
    webbrowser.open(f"file://{os.path.abspath(filename)}")
